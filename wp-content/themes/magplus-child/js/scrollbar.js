;(function($,window,document,undefined){"use strict";var Instance=undefined;var o={};var namespace="scrollbar";var handleClass="owl-scroll-handle";var progressBarClass="owl-scroll-progress";var scrollbarClass="owl-scrollbar";var draggingClass="owl-scroll-handle-dragging";var draggedClass="owl-scroll-handle-dragged";var $handle=$("<div>").addClass(handleClass);var $progressBar=$("<div>").addClass(progressBarClass);var $scrollbar=$("<div>").addClass(scrollbarClass).append($handle);var sbStyles=new StyleRestorer($scrollbar[0]);var handleStyles=new StyleRestorer($handle[0]);var progressStyles=new StyleRestorer($progressBar[0]);var sbSize=0;var progressSize=0;var dragInitEvents='touchstart.'+namespace+' mousedown.'+namespace;var dragMouseEvents='mousemove.'+namespace+' mouseup.'+namespace;var dragTouchEvents='touchmove.'+namespace+' touchend.'+namespace;var clickEvent='click.'+namespace;var interactiveElements=['INPUT','SELECT','BUTTON','TEXTAREA'];var holderProps=['overflow','position'];var movableProps=['position','webkitTransform','msTransform','transform','left','top','width','height'];var count=0;var visible=0;var ratio=1;var animationSpeed=0;var dragging={released:1,init:0};var transform,gpuAcceleration;var hPos={start:0,end:0,cur:0,index:0};var abs=Math.abs;var sqrt=Math.sqrt;var pow=Math.pow;var round=Math.round;var max=Math.max;var min=Math.min;(function(){var prefixes=['','Webkit','Moz','ms','O'];var el=document.createElement('div');function testProp(prop){for(var p=0,pl=prefixes.length;p<pl;p++){var prefixedProp=prefixes[p]?prefixes[p]+prop.charAt(0).toUpperCase()+prop.slice(1):prop;if(el.style[prefixedProp]!=null){return prefixedProp;}}}
transform=testProp('transform');gpuAcceleration=testProp('perspective')?'translateZ(0) ':'';}());var Scrollbar=function(carousel){this.initialized=false;this._core=carousel;this.options={};this._handlers={'initialized.owl.carousel refreshed.owl.carousel resized.owl.carousel drag.owl.carousel translate.owl.carousel dragged.owl.carousel':$.proxy(function(e){if(e.namespace&&this._core.settings.scrollbarType){initialize.call(this,e);}},this),"translate.owl.carousel":$.proxy(function(e){if(e.namespace&&this._core.settings.scrollbarType){sync.call(this,e);}},this)}
Instance=this._core=carousel;this.options=$.extend(Scrollbar.Defaults,this._core.options);this._core.$element.on(this._handlers);o=this.options;}
Scrollbar.Defaults={scrollbarType:'scroll',scrollDragThreshold:3,scrollbarHandleSize:10}
function dragInit(event){var isTouch=event.type==='touchstart';var source=event.data.source;if(dragging.init||!isTouch&&isInteractive(event.target)){return;}
if(!isTouch){stopDefault(event);}
unsetTransitionAnimation();dragging.released=0;dragging.init=0;dragging.$source=$(event.target);dragging.touch=isTouch;dragging.pointer=isTouch?event.originalEvent.touches[0]:event;dragging.initX=dragging.pointer.pageX;dragging.initY=dragging.pointer.pageY;dragging.path=0;dragging.delta=0;dragging.locked=0;dragging.pathToLock=0;$(document).on(isTouch?dragTouchEvents:dragMouseEvents,dragHandler);$handle.addClass(draggedClass);}
function dragHandler(event){dragging.released=event.type==='mouseup'||event.type==='touchend';dragging.pointer=dragging.touch?event.originalEvent[dragging.released?'changedTouches':'touches'][0]:event;dragging.pathX=dragging.pointer.pageX-dragging.initX;dragging.pathY=dragging.pointer.pageY-dragging.initY;dragging.path=sqrt(pow(dragging.pathX,1)+pow(dragging.pathY,1));dragging.delta=dragging.pathX+hPos.cur;var current=0;if(!dragging.released&&dragging.path<1)return;if(!dragging.init){if(dragging.path<o.scrollDragThreshold){return dragging.released?dragEnd():undefined;}
else{if(abs(dragging.pathX)>abs(dragging.pathY)){dragging.init=1;}else{return dragEnd();}}}
stopDefault(event);if(!dragging.locked&&dragging.path>dragging.pathToLock&&dragging.slidee){dragging.locked=1;dragging.$source.on(clickEvent,disableOneEvent);}
if(dragging.released){dragEnd();}
switch(o.scrollbarType){case "scroll":current=within(dragging.delta,hPos.start,hPos.end);if(transform){$handle[0].style[transform]=gpuAcceleration+'translateX'+'('+current+'px)';}else{$handle[0].style['left']=current+'px';}
break;case "progress":current=within(dragging.delta,hPos.start,hPos.end);$progressBar[0].style["width"]=current+"px";$handle[0].style['left']=current+'px';break;}
dragging.current=current;var index=round(dragging.current/ratio);if(index!=hPos.index){hPos.index=index;Instance.$element.trigger("to.owl.carousel",[index,animationSpeed,true]);}}
function dragEnd(){dragging.released=true;$(document).off(dragging.touch?dragTouchEvents:dragMouseEvents,dragHandler);$handle.removeClass(draggedClass);setTimeout(function(){dragging.$source.off(clickEvent,disableOneEvent);});hPos.cur=dragging.current;dragging.init=0;}
function disableOneEvent(event){stopDefault(event,1);$(this).off(event.type,disableOneEvent);}
function within(number,min,max){return number<min?min:number>max?max:number;}
function StyleRestorer(element){var self={};self.style={};self.save=function(){if(!element||!element.nodeType)return;for(var i=0;i<arguments.length;i++){self.style[arguments[i]]=element.style[arguments[i]];}
return self;};self.restore=function(){if(!element||!element.nodeType)return;for(var prop in self.style){if(self.style.hasOwnProperty(prop))element.style[prop]=self.style[prop];}
return self;};return self;}
function stopDefault(event,noBubbles){event.preventDefault();if(noBubbles){event.stopPropagation();}}
function isInteractive(element){return~$.inArray(element.nodeName,interactiveElements);}
function calculateCurrentPosition(){var position=0;var index=Instance.relative(Instance.current());if(index===0){position=0;}
else if(index<count-visible){position=(ratio*index);}
else{position=sbSize-progressSize;}
return position;}
function calculateCurrentSize(){var size=0;var index=Instance.relative(Instance.current());if(index<count-visible){size=ratio*index;}
else{size=sbSize;}
return size;}
function setTransitionAnimation(){$handle.css({"transition":"all "+(animationSpeed/1000)+"s ease-in-out"});$progressBar.css({"transition":"all "+(animationSpeed/1000)+"s ease-in-out"});}
function unsetTransitionAnimation(){$handle.css({"transition":""});$progressBar.css({"transition":""});}
function initialize(event){if(this.initialized){return;}
var $element=this._core.$element;$element.append($scrollbar);$handle.css({cursor:"pointer",});sbStyles.save.apply(sbStyles,holderProps);$handle.on(dragInitEvents,{source:handleClass},dragInit);sbSize=$scrollbar.width();count=event.item.count;visible=event.page.size;ratio=sbSize/(count-visible+1);animationSpeed=this._core.options.smartSpeed;hPos.start=0;hPos.cur=0;if(o.scrollbarType==="progress"){$scrollbar.prepend($progressBar);progressSize=calculateCurrentSize(event.item.index);var handleSize=$handle.width();progressStyles.save.apply(handleStyles,movableProps);$progressBar.width(progressSize);}
else{var handleSize=100;handleStyles.save.apply(handleStyles,movableProps);$handle.width(handleSize);}
hPos.end=sbSize-handleSize;this.initialized=true;}
function sync(event){if($handle.length&&dragging.init===0){setTransitionAnimation();switch(o.scrollbarType){case "scroll":var current=calculateCurrentPosition();hPos.cur=current;if(transform){$handle[0].style[transform]=gpuAcceleration+'translateX'+'('+current+'px)';}else{$handle[0].style['left']=current+'px';}
break;case "progress":var current=calculateCurrentSize();hPos.cur=current;$progressBar[0].style["width"]=current+"px";$handle[0].style['left']=current+'px';break;}}}
Scrollbar.prototype.destroy=function(){var handler,property;for(handler in this._handlers){this._core.$element.off(handler,this._handlers[handler]);}
for(property in Object.getOwnPropertyNames(this)){typeof this[property]!='function'&&(this[property]=null);}};$.fn.owlCarousel.Constructor.Plugins['Scrollbar']=Scrollbar;})(window.Zepto||window.jQuery,window,document);